@using BlazorPractice.Models;
@using BlazorPractice.Services;

@page "/register"

@inject TestService testService;

<PageTitle>Register</PageTitle>

<h1><u>Register Form</u></h1>

@if(worked) {
    <p>It worked!</p>
}

@if(passCheck) {
    <p>Your passwords gotta match</p>
}

<EditForm Model="@registerModel" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div>
        <label>First Name:</label>
        <input type="text" class="form-control" @bind-value="registerModel.FirstName"/>
        <ValidationMessage For="@(() => registerModel.FirstName)" />
    </div>

    <div>
        <label>Last Name:</label>
        <input type="text" class="form-control" @bind-value="registerModel.LastName"/>
        <ValidationMessage For="@(() => registerModel.LastName)" />
    </div>

    <div>
        <label>Username:</label>
        <input type="text" class="form-control" @bind-value="registerModel.Username"/>
        <ValidationMessage For="@(() => registerModel.Username)" />

    </div>

    <div>
        <label>Password:</label>
        <input type="password" class="form-control" @bind-value="registerModel.Password"/>
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div>
        <label>Confirm Password:</label>
        <input type="password" class="form-control" @bind-value="registerModel.ConfirmPassword"/>
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    <br/>

    <button type="submit" class="btn btn-primary">Register</button>
    
</EditForm>

<hr/>

<h1><u>Pseudo Service Test</u></h1>

<div>Test Text Will Appear & Disappear Here: @if(testService.IsSet)
{
    <span>@testService.TestVar</span>
}
</div>

<br>

<label>Change Text</label>
<input type="text" placeholder="Enter text" @bind="s"/>

<br>

<button class="btn btn-secondary" @onclick="setTestVar">View Text</button>

<br>
<br>

<button @onclick="hideTestVar">Clear Text</button>

<br>
<br>



@if(!testService.IsSet)
{
    <div>Nice</div>
}

<h1><u>Passing via Route Test</u></h1>

<a href="/route/123">Head over to RouteTest with ID 123</a>

<h1><u>Passing via Query Test</u></h1>

<a href="/query?name=John&age=25">Head over to QueryTest with name John and age 25</a>

@code {

bool worked = false;
bool passCheck = false;

string s = "";
private RegisterModel registerModel = new RegisterModel();

private void RegisterUser() {
    if(registerModel.Password != registerModel.ConfirmPassword) {
        passCheck = true;
    }
    else {
        worked = true;
    }
}

private void setTestVar()
{
    Console.WriteLine("I was called to set");
    testService.SetTest(s);
}

private void hideTestVar() 
{
    Console.WriteLine("I was called to clear");
    testService.UnsetTest();
}

}